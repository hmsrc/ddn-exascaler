# {{ ansible_managed }}
#
# ExaScaler cluster configuration file.
# Copyright DDN, 2010,2011

[global]
fs_list: {{ lustre_fs_export }}
sfa_list: 10.1.66.58 10.1.66.59
pingd: yes

[sysctl_defaults]
# List of all the kernel parameters to be set on all hosts
;net.ipv4.tcp_window_scaling: 2

[sysctl oss0]
# List of all the kernel parameters to be set for host oss0
;net.ipv4.tcp_window_scaling: 1

[HA]
type: corosync
no_quorum_policy: stop
;mcastport: 5407
corosync_nics: eth0 ib1
start_on_boot: false

[host_defaults]
stonith_type: ipmi
stonith_user: root
stonith_pass: calvin

nic_list: eth0 ib1

eth0_netmask: 255.255.252.0
eth0_gateway: 10.0.64.1

ipmi_netmask: 255.255.252.0
ipmi_gateway: 10.1.64.1

ib1_netmask: 255.255.0.0

lnets: tcp(eth0) o2ib1(ib1)

[fs {{ lustre_fs_export }}]
mgs_list: {{ groups['exsc-mds'] | join(" ") }}
mds_list: {{ groups['exsc-mds'] | reverse | join(" ") }}
oss_list: {{ groups['exsc-oss'] | join(" ") }}

# With the Distributed Namespace (DNE) feature, we can support multiple MDTs per MDS.
# MDTs have active-active failover now.
# The number of MDTs per MDS can be overridden on a per host basis.
; default_mdt_count: 2

mkfs_opts: --mkfsoptions='-text4'


# mke2fs options for the OSTs
ost_mke2fs_opts: -m1 -i 131072

# parameters added to tunefs.lustre command
mdt_opts: --param mdt.quota_type=ug
ost_opts: --param ost.quota_type=ug

# The size of MDT and MGS filesystems to create
# This size is used by LVM during filesystem creation
mdt_size: 95%%
mgs_size: 500m

# This is the number of LUNs that are going to make up the MDT. If it is
# greater than 1, than the MDT will be RAID-0 striped across the LUNs. If
# mdt_parts is 1, then the disk should be named <fsname>-MDS. If it is greater
# than 1, they should be named fs_mdt0_s0, fs_mdt0_s1, fs_mdt0_s2, etc.
mdt_parts: 5

mgs_standalone: yes
mgs_internal: yes
mdt_failback: yes

# Ansible generated MDS host info
{% for host in groups['exsc-mds'] %}
[host {{ host }}]
eth0_ip: {{ hostvars[host].interfaces.eth0.ip }}
ib1_ip: {{ hostvars[host].interfaces.ib1.ip }}
ipmi_ip: {{ hostvars[host].interfaces.ipmi.ip }}

{% endfor %}

# Ansible generated OSS host info
{% for host in groups['exsc-oss'] %}
[host {{ host }}]
{% if loop.index is odd %}
peers: {{ groups['exsc-oss'][loop.index] }}
{% else %}
peers: {{ groups['exsc-oss'][loop.index-2] }}
{% endif %}
eth0_ip: {{ hostvars[host].interfaces.eth0.ip }}
ib1_ip: {{ hostvars[host].interfaces.ib1.ip }}
ipmi_ip: {{ hostvars[host].interfaces.ipmi.ip }}
{{ lustre_fs_export }}_osts: {% for ost in range(loop.index-1, ost_count+1, groups['exsc-oss'] | length) %}{{ ost }} {% endfor %}


{% endfor %}
